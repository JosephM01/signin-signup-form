{"version":3,"sources":["logo.svg","components/Button.js","components/Input.js","components/Select.js","pages/SignInForm.js","pages/SignUpForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","_ref","type","onClick","children","_ref$className","className","react_default","a","createElement","Input","id","name","placeholder","value","onChange","Select","required","options","hidden","map","item","key","code","objectID","SignInForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","handleChange","bind","assertThisInitialized","handleSubmit","event","_event$target","target","setState","defineProperty","preventDefault","console","log","_this$state","components_Input","components_Button","Component","SignUpForm","firstName","lastName","gender","country","agreed","handleSelection","checked","components_Select","genders","countries","href","App","registered","pageSwitch","src","logo","alt","pages_SignInForm","pages_SignUpForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3322932.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nconst Button = ({ \n    type,\n    onClick,\n    children, \n    className = '', \n  }) =>\n    <div>\n      <button \n        type={type} \n        className={className} \n        onClick={onClick}\n      >\n        { children }\n      </button>\n    </div>\n\nexport default Button;","import React from 'react';\n\nconst Input = ({ \n  type, \n  id, \n  name, \n  placeholder,\n  value,\n  onChange, \n  className = '',\n}) => \n  <div>\n    <input \n      type={type} \n      id={id} \n      name={name} \n      placeholder={placeholder} \n      value={value} \n      className={className}\n      onChange={onChange}\n    />\n  </div>\n\nexport default Input;","import React from 'react';\n\nconst Select = ({ \n  name,\n  required,\n  options,\n  placeholder,\n  onChange,\n}) =>\n  <div>\n    <select name={name} required={required} onChange={onChange}>\n      <option hidden >{placeholder}</option>\n        { options.map((item) => \n          <option key={item.code || item.objectID}>{item.name}</option>\n        )}\n    </select>\n  </div>\n\nexport default Select;","import React, { Component } from 'react';\nimport '../App.css';\nimport { Button, Input } from '../components/index'\n\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      email: '',\n      password: '',\n    };\n  \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    \n  }\n\n  handleChange(event) {\n    let { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state);\n  }\n  \n  \n  render() {\n    const {\n      email,\n      password,\n    } = this.state;\n    const { onClick } = this.props;\n    return(\n      <div>\n        <form>\n          <label className='labels'>Sign In</label>\n          <div className=\"fieldPosition\">\n            <Input type='email' id='email' name='email' placeholder='Email' value={email} onChange={this.handleChange} className='inputField' />\n          </div>\n          <div className='fieldPosition'>\n            <Input type='password' id='password' name='password' placeholder='Password' value={password} onChange={this.handleChange} className='inputField' />\n          </div>\n          <div className='fieldPosition'>\n            <Button \n              type='submit' \n              onClick={this.handleSubmit} \n              className=''\n            >\n              Sign In\n            </Button>\n          </div>\n          <div className='fieldPosition'>\n            <Button \n              type='button'\n              className='' \n              onClick={onClick}\n            >\n              Don't have an account? Click here!\n            </Button>\n          </div>\n        </form>\n      </div>\n      \n    );\n  }\n}\n\nexport default SignInForm;","import React, { Component } from 'react';\nimport { Button, Input, Select } from '../components/index';\nimport countries from '../country.json';\nimport genders from '../gender.json';\n\nconst serviceTerms = 'https://en.wikipedia.org/wiki/Terms_of_service';\nconst privacyPolicy = 'https://en.wikipedia.org/wiki/Privacy_policy';\n\n\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      gender: '',\n      country: '',\n      agreed: false,\n    };\n\n    this.handleSelection = this.handleSelection.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleChange (event) {\n    let target = event.target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    let name = target.id;\n      this.setState({\n        [name]: value\n      });\n  }\n  \n  handleSelection (event) {\n    let { name, value } = event.target;\n    this.setState({\n      [name]: value\n     });\n  }\n\n  handleSubmit (event) {\n    event.preventDefault();\n    console.log(this.state)\n    \n  }\n\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      agreed,\n    }= this.state;\n    const { onClick } = this.props;\n    return(\n      <div>\n        <form>\n          <label className='labels'>Sign Up</label>\n          <div className='fieldPosition'>\n            <Input \n              type='text' \n              id='firstName' \n              name='firstName' \n              placeholder='First name' \n              value={firstName} \n              className='inputField' \n              onChange={this.handleChange} \n            />\n          </div>\n          <div className='fieldPosition'>\n            <Input \n              type='text' \n              id='lastName' \n              name='lastName' \n              placeholder='Last name' \n              value={lastName} \n              className='inputField' \n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='fieldPosition'>\n            <Input \n              type='email' \n              id='email' \n              name='email' \n              placeholder='Email' \n              value={email} \n              className='inputField' \n              onChange={this.handleChange}\n            />\n          </div>    \n          <div className='fieldPosition'>\n            <Input \n              type='password' \n              id='password' \n              name='password' \n              placeholder='Password' \n              value={password} \n              className='inputField' \n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='fieldPosition'>\n            <label className='labels'>Select a gender</label>\n            <Select \n              name='gender' \n              required \n              options={genders} \n              placeholder='-- Select --' \n              onChange={this.handleSelection} \n            />\n          </div>\n          <div className='fieldPosition'>\n            <div>\n              <label className='labels'>Select a country</label>\n            </div>\n            <Select \n              name=\"country\" \n              required \n              options={countries} \n              placeholder='-- Select --' \n              onChange={this.handleSelection}\n            />\n          </div>\n          <div className='checkboxField'>\n            <label className='labels'>\n              I agree to the &nbsp;\n              <a \n                href={serviceTerms}\n              >\n                Terms of Service\n              </a>&nbsp; and &nbsp;\n              <a \n                href={privacyPolicy}\n              > \n                Privacy Policy\n              </a>.\n            </label>\n            <Input \n              type='checkbox' \n              id='agreed' \n              name='agreed' \n              value={agreed} \n              className='checkbox' \n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='fieldPosition'>\n            <Button \n              type='submit' \n              onClick={this.handleSubmit}\n            >\n              Sign Up\n            </Button>\n          </div>            \n        </form>\n        <div className='fieldPosition'>\n          <Button type='button' onClick={onClick}>\n            Already have an account? Click here!\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignUpForm;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SignInForm from './pages/SignInForm';\nimport SignUpForm from './pages/SignUpForm';\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props); \n  \n    this.state = {\n      registered: true,\n    };\n    this.pageSwitch = this.pageSwitch.bind(this);\n  }\n\n  pageSwitch() {\n    const { registered } = this.state;\n    this.setState({ registered: !registered });\n  }\n  \n  render() {\n    const { registered } = this.state;\n    return (\n      <div className=\"App\">\n        <div className='logoBox'>\n          <img src={logo} className='App-logo' alt='logo' />\n        </div>\n        <div className='formContainer'>\n          { registered ?\n            <SignInForm onClick={this.pageSwitch} />\n          :\n            <SignUpForm onClick={this.pageSwitch} />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n                \n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}